SOURCE_DIR := $(CORE_DIR)/..
ifeq ($(LIBRETRO_COMM_DIR),)
LIBRETRO_COMM_DIR := $(CORE_DIR)/libretro-common
endif
LIBCHDR_DIR := $(SOURCE_DIR)/libchdr
LZMA_DIR := $(LIBCHDR_DIR)/deps/lzma-19.00
FLAC_DIR := $(LIBCHDR_DIR)/deps/flac-1.3.3
ZLIB_DIR := $(LIBCHDR_DIR)/deps/zlib-1.2.11

FLAGS += -D__LIBRETRO__ -DNO_CLI -DHAVE_SYS_TIME_H -DHAVE_GETTIMEOFDAY -DHAVE_STDINT_H=1 -DVERSION=\"0.9.15\"

INCLUDE_DIRS := $(CORE_DIR) \
	$(SOURCE_DIR) \
	$(LIBRETRO_COMM_DIR)/include \
	$(SOURCE_DIR)/musashi \
	$(LIBCHDR_DIR)/include \
	$(LZMA_DIR)/include \
	$(FLAC_DIR)/include \
	$(FLAC_DIR)/src/include \
	$(ZLIB_DIR)

OBJECTS_S :=

SOURCES_C := $(SOURCE_DIR)/osdcore.c \
	$(SOURCE_DIR)/bios.c \
	$(SOURCE_DIR)/cd-libretro.c \
	$(SOURCE_DIR)/cd_drive.c \
	$(SOURCE_DIR)/cheat.c \
	$(SOURCE_DIR)/coffelf.c \
	$(SOURCE_DIR)/cs0.c \
	$(SOURCE_DIR)/cs1.c \
	$(SOURCE_DIR)/cs2.c \
	$(SOURCE_DIR)/debug.c \
	$(SOURCE_DIR)/error.c \
	$(SOURCE_DIR)/gameinfo.c \
	$(SOURCE_DIR)/japmodem.c \
	$(SOURCE_DIR)/m68kcore.c \
	$(SOURCE_DIR)/memory.c \
	$(SOURCE_DIR)/movie.c \
	$(SOURCE_DIR)/mpeg_card.c \
	$(SOURCE_DIR)/netlink.c \
	$(SOURCE_DIR)/peripheral.c \
	$(SOURCE_DIR)/profile.c \
	$(SOURCE_DIR)/scspdsp.c \
	$(SOURCE_DIR)/scu.c \
	$(SOURCE_DIR)/sh2cache.c \
	$(SOURCE_DIR)/sh2core.c \
	$(SOURCE_DIR)/sh2d.c \
	$(SOURCE_DIR)/sh2idle.c \
	$(SOURCE_DIR)/sh2int.c \
	$(SOURCE_DIR)/sh2trace.c \
	$(SOURCE_DIR)/sh7034.c \
	$(SOURCE_DIR)/smpc.c \
	$(SOURCE_DIR)/ygr.c

ifeq ($(ENABLE_CHD), 1)
	# chd also requires zlib
	ENABLE_ZLIB = 1
	FLAGS += -DENABLE_CHD=1 -DHAVE_LROUND -D_7ZIP_ST -DFLAC__HAS_OGG=0 -DFLAC__NO_DLL -DPACKAGE_VERSION=\"1.3.3\"
	SOURCES_C +=  	$(LIBCHDR_DIR)/src/libchdr_chd.c \
		$(LIBCHDR_DIR)/src/libchdr_bitstream.c \
		$(LIBCHDR_DIR)/src/libchdr_huffman.c \
		$(LIBCHDR_DIR)/src/libchdr_flac.c \
		$(LIBCHDR_DIR)/src/libchdr_cdrom.c \
		$(FLAC_DIR)/src/stream_decoder.c \
		$(FLAC_DIR)/src/format.c \
		$(FLAC_DIR)/src/bitreader.c \
		$(FLAC_DIR)/src/crc.c \
		$(FLAC_DIR)/src/memory.c \
		$(FLAC_DIR)/src/lpc.c \
		$(FLAC_DIR)/src/cpu.c \
		$(FLAC_DIR)/src/md5.c \
		$(FLAC_DIR)/src/fixed.c \
		$(LZMA_DIR)/src/LzmaEnc.c \
		$(LZMA_DIR)/src/LzFind.c \
		$(LZMA_DIR)/src/LzmaDec.c
endif

ifeq ($(ENABLE_ZLIB), 1)
	FLAGS += -DENABLE_ZLIB=1
	SOURCES_C += $(ZLIB_DIR)/adler32.c \
		$(ZLIB_DIR)/crc32.c \
		$(ZLIB_DIR)/inffast.c \
		$(ZLIB_DIR)/inflate.c \
		$(ZLIB_DIR)/inftrees.c \
		$(ZLIB_DIR)/zutil.c \
		$(SOURCE_DIR)/junzip.c
endif

ifeq ($(ENABLE_TSUNAMI), 1)
	FLAGS += -DENABLE_TSUNAMI=1
	SOURCES_C += $(SOURCE_DIR)/tsunami/yab_tsunami.c \
		$(SOURCE_DIR)/tsunami/Tsunami.c
endif

ifeq ($(HAVE_MUSASHI), 1)
	SOURCES_C += $(SOURCE_DIR)/musashi/m68kcpu.c \
		$(SOURCE_DIR)/musashi/m68kops.c \
		$(SOURCE_DIR)/musashi/m68kopnz.c \
		$(SOURCE_DIR)/musashi/m68kopac.c \
		$(SOURCE_DIR)/musashi/m68kopdm.c \
		$(SOURCE_DIR)/m68kmusashi.c
else
	SOURCES_C += $(SOURCE_DIR)/c68k/c68k.c \
		$(SOURCE_DIR)/m68kc68k.c
endif

ifeq ($(USE_SCSP2), 1)
	FLAGS += -DUSE_SCSP2=1
	SOURCES_C += $(SOURCE_DIR)/scsp2.c
else
	SOURCES_C += $(SOURCE_DIR)/scsp.c
endif

ifeq ($(ARCH_IS_WINDOWS), 1)
	SOURCES_C += $(FLAC_DIR)/src/windows_unicode_filenames.c
endif

ifeq ($(HAVE_GRIFFIN), 1)
	SOURCES_C += $(LIBRETRO_DIR)/yabause_griffin.c
else
	SOURCES_C +=  $(SOURCE_DIR)/snddummy.c \
		$(SOURCE_DIR)/vdp1.c \
		$(SOURCE_DIR)/vdp2.c \
		$(SOURCE_DIR)/vidshared.c \
		$(SOURCE_DIR)/vidsoft.c \
		$(SOURCE_DIR)/titan/titan.c \
		$(SOURCE_DIR)/yabause.c \
		$(CORE_DIR)/libretro.c
	ifeq ($(HAVE_THREADS), 1)
		SOURCES_C += $(SOURCE_DIR)/thr-rthreads.c
	else
		SOURCES_C += $(SOURCE_DIR)/thr-dummy.c
	endif
endif

ifeq ($(HAVE_GL),1)
SOURCES_C += \
	$(SOURCE_DIR)/ygles.c \
	$(SOURCE_DIR)/vidogl.c \
	$(SOURCE_DIR)/yglshaderes.c
endif

ifneq ($(DYNAREC),0)
FLAGS += -DSH2_DYNAREC
SOURCES_C += $(SOURCE_DIR)/sh2_dynarec/sh2_dynarec.c
ifeq ($(DYNAREC),3)
OBJECTS_S += $(SOURCE_DIR)/sh2_dynarec/linkage_arm.s
endif
ifeq ($(DYNAREC),2)
OBJECTS_S += $(SOURCE_DIR)/sh2_dynarec/linkage_x64.s
endif
endif

ifneq ($(STATIC_LINKING), 1)
SOURCES_C += $(LIBRETRO_COMM_DIR)/streams/file_stream.c \
	$(LIBRETRO_COMM_DIR)/streams/file_stream_transforms.c \
	$(LIBRETRO_COMM_DIR)/compat/fopen_utf8.c \
	$(LIBRETRO_COMM_DIR)/compat/compat_posix_string.c \
	$(LIBRETRO_COMM_DIR)/compat/compat_strl.c \
	$(LIBRETRO_COMM_DIR)/compat/compat_strcasestr.c \
	$(LIBRETRO_COMM_DIR)/encodings/encoding_utf.c \
	$(LIBRETRO_COMM_DIR)/file/file_path.c \
	$(LIBRETRO_COMM_DIR)/string/stdstring.c \
	$(LIBRETRO_COMM_DIR)/time/rtime.c
	ifeq ($(HAVE_THREADS), 1)
		SOURCES_C += $(LIBRETRO_COMM_DIR)/rthreads/rthreads.c
	endif
	ifeq ($(HAVE_CDROM), 1)
		FLAGS += -DHAVE_CDROM
		SOURCES_C += $(LIBRETRO_COMM_DIR)/cdrom/cdrom.c \
			$(LIBRETRO_COMM_DIR)/vfs/vfs_implementation_cdrom.c \
			$(LIBRETRO_COMM_DIR)/lists/string_list.c \
			$(LIBRETRO_COMM_DIR)/lists/dir_list.c \
			$(LIBRETRO_COMM_DIR)/file/retro_dirent.c
	endif
	ifeq ($(HAVE_UWP), 1)
		SOURCES_CXX += $(LIBRETRO_COMM_DIR)/vfs/vfs_implementation_uwp.cpp
	else
		SOURCES_C += $(LIBRETRO_COMM_DIR)/vfs/vfs_implementation.c
	endif
endif

ifeq ($(HAVE_THREADS),1)
	FLAGS += -DHAVE_THREADS=1
endif

ifeq ($(USE_PLAY_JIT),1)
	FLAGS += -DHAVE_PLAY_JIT=1
	SOURCES_CXX += $(SOURCE_DIR)/scsp_dsp_jit.cpp \
		$(SOURCE_DIR)/scu_dsp_jit.cpp \
		$(SOURCE_DIR)/sh2_jit.cpp \
		$(wildcard $(SOURCE_DIR)/play/src/*.cpp)
	INCLUDE_DIRS += $(SOURCE_DIR)/play/include
endif

M68KMAKE_EXE = m68kmake$(EXE_EXT)
GEN68K_EXE = gen68k$(EXE_EXT)
GEN68K_INC_SOURCES := $(SOURCE_DIR)/c68k/c68k_ini.inc \
	$(SOURCE_DIR)/c68k/c68k_op0.inc \
	$(SOURCE_DIR)/c68k/c68k_op1.inc \
	$(SOURCE_DIR)/c68k/c68k_op2.inc \
	$(SOURCE_DIR)/c68k/c68k_op3.inc \
	$(SOURCE_DIR)/c68k/c68k_op4.inc \
	$(SOURCE_DIR)/c68k/c68k_op5.inc \
	$(SOURCE_DIR)/c68k/c68k_op6.inc \
	$(SOURCE_DIR)/c68k/c68k_op7.inc \
	$(SOURCE_DIR)/c68k/c68k_op8.inc \
	$(SOURCE_DIR)/c68k/c68k_op9.inc \
	$(SOURCE_DIR)/c68k/c68k_opA.inc \
	$(SOURCE_DIR)/c68k/c68k_opB.inc \
	$(SOURCE_DIR)/c68k/c68k_opC.inc \
	$(SOURCE_DIR)/c68k/c68k_opD.inc \
	$(SOURCE_DIR)/c68k/c68k_opE.inc \
	$(SOURCE_DIR)/c68k/c68k_opF.inc

M68KMAKE_INC_SOURCES := $(SOURCE_DIR)/musashi/m68kops.h \
	$(SOURCE_DIR)/musashi/m68kopac.c \
	$(SOURCE_DIR)/musashi/m68kopdm.c \
	$(SOURCE_DIR)/musashi/m68kopnz.c \
	$(SOURCE_DIR)/musashi/m68kops.c

C68KEXEC_SOURCE := $(SOURCE_DIR)/c68k/c68kexec.c
C68KEXEC_OBJECT := $(C68KEXEC_SOURCE:.c=.c.o)

OBJECTS_C += $(SOURCES_C:.c=.c.o)
OBJECTS_CXX += $(SOURCES_CXX:.cpp=.cpp.o)

ifeq ($(HAVE_MUSASHI), 1)
	FLAGS += -DHAVE_MUSASHI=1
else
	OBJECTS_C += $(C68KEXEC_OBJECT)
endif

ifeq ($(USE_RGB_565), 1)
    FLAGS += -DUSE_16BPP=1 -DUSE_RGB_565=1
else
    FLAGS += -DUSE_16BPP=1 -DUSE_RGB_555=1
endif
